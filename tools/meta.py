#!/usr/bin/env python3

"""
The meta tool extracts and pretty-prints metadata from files generated by EvenTDT's tools.
To run the tool, use:

.. code-block:: bash

    ./tools/meta.py \\
    --file idf.json

The full list of accepted arguments:

    - ``-f --file``     *<Required>* The file from where to print the metadata, which must have been generated by an EvenTDT tool.
"""

import argparse
import json

def setup_args():
    """
    Set up and get the list of command-line arguments.

    Accepted arguments:

        - ``-f --file``     *<Required>* The file from where to print the metadata, which must have been generated by an EvenTDT tool.

    :return: The command-line arguments.
    :rtype: :class:`argparse.Namespace`
    """

    parser = argparse.ArgumentParser(description="Extract the metadata from files generated by EvenTDT's tools.")

    parser.add_argument('-f', '--file', type=str, required=True,
                        help='<Required> The file from where to print the metadata, which must have been generated by an EvenTDT tool.')

    args = parser.parse_args()
    return args

def main():
    """
    Main program loop.
    """

    args = setup_args()
    pprint(args.file)

def pprint(file):
    """
    Pretty-print the metadata from the given file.

    :param file: The path to the file from where to print the metadata.
    :type file: str
    """

    with open(file) as f:
        data = json.loads(''.join(f.readlines()))
        cmd, pcmd = data['cmd'], data['pcmd']
        del data

        """
        Print the general settings first.
        """
        print(f"Generated on { cmd['_date'] }")
        print("=======================================")
        print(f"{ cmd['_cmd'] }")
        print()

if __name__ == "__main__":
    main()
