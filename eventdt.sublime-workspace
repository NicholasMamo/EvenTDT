{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"is",
				"is_retweet"
			],
			[
				"global",
				"global_scheme"
			],
			[
				"__mod",
				"__module__"
			],
			[
				"filt",
				"filtered"
			],
			[
				"assertL",
				"assertLess"
			],
			[
				"appl",
				"_apply_reporting_level"
			],
			[
				"asse",
				"assertTrue"
			],
			[
				"bootstr",
				"bootstrapped-new"
			],
			[
				"bootsr",
				"bootstrap"
			],
			[
				"EF",
				"EFIDF"
			],
			[
				"EFID",
				"EFIDFEntropy"
			],
			[
				"WikiAt",
				"WikipediaAttributePostprocessor"
			],
			[
				"Search",
				"WikipediaSearchResolver"
			],
			[
				"Wikipedi",
				"WikipediaSearchResolver"
			],
			[
				"WikipediaAt",
				"WikipediaAttributePostprocessor"
			],
			[
				"Wikie",
				"WikipediaAttributeExtrapolator"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pretti",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"prett",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"split",
				"File: Split View"
			],
			[
				"package",
				"Package Control: Advanced Install Package"
			],
			[
				"prettif",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"pret",
				"Pretty JSON: Format JSON"
			],
			[
				"",
				"Bookmarks: Select All"
			],
			[
				"pretty",
				"Pretty JSON: Format JSON"
			],
			[
				"git:",
				"Git: Gui"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"1",
				"Go to 1self Dashboard"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"diff",
				"Git: Diff All Files (Ignore Whitespace)"
			],
			[
				"key ",
				"Preferences: Key Bindings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"scheme",
				"UI: Select Color Scheme"
			],
			[
				"select theme",
				"UI: Select Theme"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"view",
				"View: Toggle Minimap"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"add",
				"Git: Add All"
			],
			[
				"ackage",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"package con",
				"Install Package Control"
			],
			[
				"git",
				"Set Syntax: Git Config"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/nicholas/GitHub/EvenTDT",
		"/home/nicholas/GitHub/EvenTDT/eventdt",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers"
	],
	"file_history":
	[
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/eld_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/tools/summarize.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_summarize.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/twitter/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tests/test_document.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/document.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/fuego_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/tests/test_fuego_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/tests/test_document_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/twitter/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/CRYCHE-500.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/samplev2.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/weighting/tfidf.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/weighting/global_schemes/idf.py",
		"/home/nicholas/GitHub/EvenTDT/tools/consume.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tokenizer.py",
		"/home/nicholas/DATA/c6-tdt/analyses/Southampton - Arsenal (ELD).json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/algorithms/dgs.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/vector_math.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/cluster.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/objects/exportable.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/objects/attributable.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/algorithms/temporal_no_k_means.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_participants.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_shareable.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_consume.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_model.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/algorithms/mmr.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/tools/model.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/tests/test_vector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/vector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/tests/test_cluster.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/tests/test_cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/tests/test_topical_cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/document_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/topical_cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/tests/test_timeline.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/split_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/token_split_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/zhao_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tdt/algorithms/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/fire_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tdt/algorithms/zhao.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/algorithms/tests/test_no_k_means.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/algorithms/no_k_means.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/understanding_modeler.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/tests/test_understanding_modeler.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/attributes/profile.py",
		"/home/nicholas/GitHub/EvenTDT/tools/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tests/test_tokenizer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/concepts.json",
		"/home/nicholas/GitHub/EvenTDT/tools/filter_retweets.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/#ParmaMilan-simplified.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/#ParmaMilan-streams.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/LIVNAP.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/LIVMUN.json",
		"/home/nicholas/GitHub/EvenTDT/tools/participants.py",
		"/home/nicholas/GitHub/EvenTDT/tools/concepts.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/eld_participant_detector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/participants.json",
		"/home/nicholas/GitHub/EvenTDT/tools/bootstrap.py",
		"/home/nicholas/GitHub/EvenTDT/tools/terms.py",
		"/home/nicholas/GitHub/EvenTDT/tools/evaluation/terms.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/stat/corpus/tests/test_rank.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/stat/corpus/rank.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/attributes/extractors/linguistic.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/tokenized/sample-2.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/tokenized/sample-1.json",
		"/home/nicholas/GitHub/EvenTDT/README.md",
		"/home/nicholas/GitHub/EvenTDT/tools/collect.py",
		"/home/nicholas/GitHub/EvenTDT/tools/shareable.py",
		"/home/nicholas/GitHub/EvenTDT/temp/meta.json",
		"/home/nicholas/GitHub/EvenTDT/tests.sh",
		"/home/nicholas/GitHub/EvenTDT/docsource/tools.rst",
		"/home/nicholas/GitHub/EvenTDT/tools/evaluation/tests/test_terms.py",
		"/home/nicholas/GitHub/EvenTDT/tools/correlation.py",
		"/home/nicholas/GitHub/EvenTDT/tools/evaluation/ate.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/correlations.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/application/tests/test_event.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/application/event.py",
		"/home/nicholas/GitHub/EvenTDT/tools/idf.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_idf.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/idf.json",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_concepts.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_bootstrap.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_correlation.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_terms.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/gold.txt",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/empty.txt",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/bootstrapping/bootstrapped.json",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/sample.json",
		"/home/nicholas/GitHub/EvenTDT/temp/sample.json",
		"/home/nicholas/GitHub/EvenTDT/tools/to_tsv.py",
		"/home/nicholas/GitHub/Embed2Detect/embed2detect/main.py",
		"/home/nicholas/GitHub/Embed2Detect/embed2detect/event_word_extractor.py",
		"/home/nicholas/GitHub/Embed2Detect/project_config.py",
		"/home/nicholas/GitHub/EvenTDT/docsource/ate.rst",
		"/home/nicholas/GitHub/EvenTDT/docsource/apd.rst",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/application/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/temp/event.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/tests/test_eld_participant_detector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/depict_participant_detector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/tests/test_depict_participant_detector.py",
		"/home/nicholas/DATA/c3-apd/#CanadianGP-2022/temp.json",
		"/home/nicholas/DATA/c3-apd/#CanadianGP-2022/participants-annotations-extrapolated.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extrapolators/external/wikipedia_attribute_extrapolator.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/resolvers/external/wikipedia_search_resolver.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/filters/local/rank_filter.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tokenizer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/entity_extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/annotation_extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/twitterner_entity_extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extrapolators/external/__init__.py"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 122.0,
		"where_history":
		[
			"",
			"tools/*.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"twitter",
			"tweet",
			"is_verified",
			"document.is_verified",
			".is_verified",
			"twitter.is_verified",
			"should store whether the original author was verified.",
			"whether it is a verified.",
			" whether it is a verified.",
			"stores whether it is a verified.",
			"_is_verified",
			"if not twitter.is_retweet(tweet)",
			"_is_verified",
			"for tweet, document in zip(tweets, documents)\n                                                                                    if not twitter.is_retweet(tweet) ))",
			"document.is_verified",
			"is_verified",
			"twitter.handle",
			"Test that creating a document from a dictionary saves a boolean indicating whether the tweet is by a verified author.",
			"is_verified",
			"_author_is_verified",
			"_is_verified",
			"is_verified",
			"test_from_dict_is_verified",
			"is_verified",
			"provided",
			"twitter.user_handle(twitter.original(tweet)))",
			"twitter.user_handle(twitter.quoted(tweet))",
			"twitter.quoted(tweet)['user']",
			"screen_name",
			"tweet['user']",
			"CRYCHE-500",
			"test_user_handle_",
			"id_str",
			"user_id",
			"user ID",
			"test_user_id",
			"username",
			"user_id",
			"user",
			"(tweet)['user']['id_str']",
			"['user']['id_str']",
			"original['author_id']",
			"original['user']['id_str']",
			"twitter.original(tweet)['user']['id_str']",
			"twitter.quoted(tweet)['author_id']",
			"twitter.author(tweet)['id_str']",
			"author",
			"twitter.author(twitter.quoted(tweet))['id_str']",
			"twitter.author(tweet, twitter.user_id(twitter.quoted(tweet)))['id']",
			"twitter.quoted(tweet)['user']['id']",
			"twitter.original(tweet)['author_id']",
			"twitter.original(tweet)['user']['id']",
			"twitter.author(tweet)['id']",
			"author",
			"twitter.quoted(tweet)['user']['id'])",
			"author",
			"twitter.quoted(tweet))['id_str']",
			"twitter.quoted(tweet))",
			"twitter.original(tweet)['user']['id']",
			"twitter.quoted",
			"['user']['id_str']",
			"['user']",
			"twitter.is_quote",
			"tweet['author_id']",
			"['user']['id_str']",
			"CRYCHE-500.json",
			"test_user_id",
			"retweetedd",
			"quote",
			"reply",
			"is_quote",
			"author",
			"author_id",
			"891784224",
			"retweet",
			"original['user']['id_str']",
			"description",
			"retrieves",
			"EL",
			"reply",
			"idf",
			"global_schemes",
			"scheme",
			"storage",
			"Storage",
			"TF-",
			"`.",
			"remove_unicode_entities",
			"emoji",
			"eventdt",
			"from ",
			"reporting",
			"time.time()",
			"str",
			"brevity_scores",
			"_largest_communities",
			"_extract_communities",
			"_score_documents",
			"math",
			"json",
			"[document]",
			"_score_documents",
			"upper",
			"capital",
			"upper_pattern",
			"document.",
			"document.attributes['timestamp']",
			"hash",
			".get('id')",
			"summaries",
			"filter_documents",
			"reporting",
			"group",
			"reporting",
			"ORIGINAL",
			"documents",
			" ))",
			"any",
			"is_retweet",
			"retweets",
			"original",
			"ORIGINAL",
			"is_retwee",
			"all",
			"any",
			"not",
			"'..'",
			"-500"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\\\\\\\\\n",
			"\\t&\\t",
			"is_own",
			"\\t&\\t",
			" \\\\\\\\ \\n",
			"\\\\ \\n",
			" & ",
			"SEER",
			"EVATE",
			"    ",
			"\\t&\\t",
			"\\t\\\\\\\\\\n",
			"\\\\\\n",
			"\\t&\\t",
			"\\t",
			"\\\\t",
			"\\\\%",
			"\\%",
			"\\n",
			"\\%"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 275.0
	},
	"pinned_build_system": "",
	"project": "eventdt.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"twitterini",
				"eventdt/twitter/__init__.py"
			],
			[
				"testsummar",
				"tools/tests/test_summarize.py"
			],
			[
				"summari",
				"tools/summarize.py"
			],
			[
				"testdocu",
				"eventdt/nlp/tests/test_document.py"
			],
			[
				"testeld",
				"eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py"
			],
			[
				"docume",
				"eventdt/nlp/document.py"
			],
			[
				"eldconsu",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"testfueg",
				"eventdt/queues/consumers/algorithms/tests/test_fuego_consumer.py"
			],
			[
				"fuego",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"fuegocon",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"testdo",
				"eventdt/nlp/tests/test_document.py"
			],
			[
				"documen",
				"eventdt/nlp/document.py"
			],
			[
				"samplve",
				"eventdt/tests/corpora/samplev2.json"
			],
			[
				"crych",
				"eventdt/tests/corpora/CRYCHE-500.json"
			],
			[
				"testpackage",
				"eventdt/twitter/tests/test_package.py"
			],
			[
				"twitterinit",
				"eventdt/twitter/__init__.py"
			],
			[
				"testfuego",
				"eventdt/queues/consumers/algorithms/tests/test_fuego_consumer.py"
			],
			[
				"fegoc",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"fuegoco",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"idf.py",
				"eventdt/nlp/weighting/global_schemes/idf.py"
			],
			[
				"tfidf",
				"eventdt/nlp/weighting/tfidf.py"
			],
			[
				"consume",
				"tools/consume.py"
			],
			[
				"tokeni",
				"eventdt/nlp/tokenizer.py"
			],
			[
				"testsumm",
				"tools/tests/test_summarize.py"
			],
			[
				"summarize",
				"tools/summarize.py"
			],
			[
				"testdoc",
				"eventdt/nlp/tests/test_document.py"
			],
			[
				"document",
				"eventdt/nlp/document.py"
			],
			[
				"vectorma",
				"eventdt/vsm/vector_math.py"
			],
			[
				"dgs",
				"eventdt/summarization/algorithms/dgs.py"
			],
			[
				"cluster",
				"eventdt/vsm/clustering/cluster.py"
			],
			[
				"testdocument",
				"eventdt/nlp/tests/test_document.py"
			],
			[
				"export",
				"eventdt/objects/exportable.py"
			],
			[
				"fuegoc",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"exportab",
				"eventdt/objects/exportable.py"
			],
			[
				"attrib",
				"eventdt/objects/attributable.py"
			],
			[
				"tempora",
				"eventdt/vsm/clustering/algorithms/temporal_no_k_means.py"
			],
			[
				"consu",
				"tools/consume.py"
			],
			[
				"eldcons",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"testeldcon",
				"eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py"
			],
			[
				"eldcon",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"cosnume",
				"tools/consume.py"
			],
			[
				"test",
				"tools/tests/test_participants.py"
			],
			[
				"testsha",
				"tools/tests/test_shareable.py"
			],
			[
				"testconsume",
				"tools/tests/test_consume.py"
			],
			[
				"modelersini",
				"eventdt/modeling/modelers/__init__.py"
			],
			[
				"modeltestpackage",
				"eventdt/modeling/modelers/tests/test_package.py"
			],
			[
				"testmodel",
				"tools/tests/test_model.py"
			],
			[
				"queualgo",
				"eventdt/queues/consumers/algorithms/__init__.py"
			],
			[
				"mmr",
				"eventdt/summarization/algorithms/mmr.py"
			],
			[
				"testsummari",
				"tools/tests/test_summarize.py"
			],
			[
				"timelineinit",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"timelineini",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"modelertestp",
				"eventdt/modeling/modelers/tests/test_package.py"
			],
			[
				"nodesini",
				"eventdt/summarization/timeline/nodes/__init__.py"
			],
			[
				"modelers/tes",
				"eventdt/modeling/modelers/tests/test_package.py"
			],
			[
				"modelingini",
				"eventdt/modeling/__init__.py"
			],
			[
				"modeling/",
				"eventdt/modeling/modelers/__init__.py"
			],
			[
				"model",
				"tools/model.py"
			],
			[
				"testvec",
				"eventdt/vsm/tests/test_vector.py"
			],
			[
				"vector",
				"eventdt/vsm/vector.py"
			],
			[
				"exportable",
				"eventdt/objects/exportable.py"
			],
			[
				"testclust",
				"eventdt/vsm/clustering/tests/test_cluster.py"
			],
			[
				"testcluster",
				"eventdt/vsm/clustering/tests/test_cluster.py"
			],
			[
				"testdocume",
				"eventdt/summarization/timeline/nodes/tests/test_document_node.py"
			],
			[
				"testtopical",
				"eventdt/summarization/timeline/nodes/tests/test_topical_cluster_node.py"
			],
			[
				"documentno",
				"eventdt/summarization/timeline/nodes/document_node.py"
			],
			[
				"topicalcl",
				"eventdt/summarization/timeline/nodes/topical_cluster_node.py"
			],
			[
				"vecto",
				"eventdt/vsm/vector.py"
			],
			[
				"attribu",
				"eventdt/objects/attributable.py"
			],
			[
				"vec",
				"eventdt/vsm/vector.py"
			],
			[
				"attributable",
				"eventdt/objects/attributable.py"
			],
			[
				"documentnode",
				"eventdt/summarization/timeline/nodes/document_node.py"
			],
			[
				"timelini",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"testtimeline",
				"eventdt/summarization/timeline/tests/test_timeline.py"
			],
			[
				"testtopica",
				"eventdt/summarization/timeline/nodes/tests/test_topical_cluster_node.py"
			],
			[
				"dcu",
				"eventdt/nlp/document.py"
			],
			[
				"clusterno",
				"eventdt/summarization/timeline/nodes/cluster_node.py"
			],
			[
				"testnode",
				"eventdt/summarization/timeline/nodes/tests/test_cluster_node.py"
			],
			[
				"nodesinit",
				"eventdt/summarization/timeline/nodes/__init__.py"
			],
			[
				"node",
				"eventdt/summarization/timeline/nodes/topical_cluster_node.py"
			],
			[
				"split",
				"eventdt/queues/consumers/split_consumer.py"
			],
			[
				"tokensplit",
				"eventdt/queues/consumers/token_split_consumer.py"
			],
			[
				"fuegocons",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"zhacons",
				"eventdt/queues/consumers/algorithms/zhao_consumer.py"
			],
			[
				"eldconsumer",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"algorinit",
				"eventdt/queues/consumers/algorithms/__init__.py"
			],
			[
				"algorithmsini",
				"eventdt/queues/consumers/algorithms/__init__.py"
			],
			[
				"algorithmsi",
				"eventdt/tdt/algorithms/__init__.py"
			],
			[
				"testeldcons",
				"eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py"
			],
			[
				"model.",
				"tools/model.py"
			],
			[
				"summar",
				"tools/summarize.py"
			],
			[
				"firecon",
				"eventdt/queues/consumers/algorithms/fire_consumer.py"
			],
			[
				"zhao",
				"eventdt/tdt/algorithms/zhao.py"
			],
			[
				"clusternode",
				"eventdt/summarization/timeline/nodes/topical_cluster_node.py"
			],
			[
				"testnok",
				"eventdt/vsm/clustering/algorithms/tests/test_no_k_means.py"
			],
			[
				"tempor",
				"eventdt/vsm/clustering/algorithms/temporal_no_k_means.py"
			],
			[
				"nok",
				"eventdt/vsm/clustering/algorithms/no_k_means.py"
			],
			[
				"nokme",
				"eventdt/vsm/clustering/algorithms/no_k_means.py"
			],
			[
				"testund",
				"eventdt/modeling/modelers/tests/test_understanding_modeler.py"
			],
			[
				"under",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"consume.",
				"tools/consume.py"
			],
			[
				"profile",
				"eventdt/attributes/profile.py"
			],
			[
				"toolsinit",
				"tools/__init__.py"
			],
			[
				"model.p",
				"tools/model.py"
			],
			[
				"testunde",
				"eventdt/modeling/modelers/tests/test_understanding_modeler.py"
			],
			[
				"underst",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"testpackage nlp",
				"eventdt/nlp/tests/test_package.py"
			],
			[
				"testokn",
				"eventdt/nlp/tests/test_tokenizer.py"
			],
			[
				"nlpini",
				"eventdt/nlp/__init__.py"
			],
			[
				"tokeniz",
				"eventdt/nlp/tokenizer.py"
			],
			[
				"concepts",
				"eventdt/tests/corpora/ate/concepts.json"
			],
			[
				"filter",
				"tools/filter_retweets.py"
			],
			[
				"simplif",
				"eventdt/tests/corpora/timelines/#ParmaMilan-simplified.json"
			],
			[
				"timeline",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"summariz",
				"tools/summarize.py"
			],
			[
				"parmami",
				"eventdt/tests/corpora/timelines/#ParmaMilan-streams.json"
			],
			[
				"parmamilan",
				"eventdt/tests/corpora/timelines/#ParmaMilan-streams.json"
			],
			[
				"modelini",
				"eventdt/modeling/modelers/__init__.py"
			],
			[
				"und",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"timelines/",
				"eventdt/tests/corpora/timelines/LIVNAP.json"
			],
			[
				"timeln.json",
				"eventdt/tests/corpora/timelines/LIVMUN.json"
			],
			[
				"mod",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"partic",
				"tools/participants.py"
			],
			[
				"unde",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"testpa",
				"tools/tests/test_participants.py"
			],
			[
				"particip",
				"eventdt/apd/eld_participant_detector.py"
			],
			[
				"nlp/",
				"eventdt/nlp/tokenizer.py"
			],
			[
				"unders",
				"eventdt/modeling/modelers/understanding_modeler.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/GitHub/EvenTDT/eventdt.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 263.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
