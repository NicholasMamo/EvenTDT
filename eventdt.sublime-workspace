{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"global",
				"global_scheme"
			],
			[
				"__mod",
				"__module__"
			],
			[
				"filt",
				"filtered"
			],
			[
				"assertL",
				"assertLess"
			],
			[
				"appl",
				"_apply_reporting_level"
			],
			[
				"asse",
				"assertTrue"
			],
			[
				"bootstr",
				"bootstrapped-new"
			],
			[
				"bootsr",
				"bootstrap"
			],
			[
				"EF",
				"EFIDF"
			],
			[
				"EFID",
				"EFIDFEntropy"
			],
			[
				"WikiAt",
				"WikipediaAttributePostprocessor"
			],
			[
				"Search",
				"WikipediaSearchResolver"
			],
			[
				"Wikipedi",
				"WikipediaSearchResolver"
			],
			[
				"WikipediaAt",
				"WikipediaAttributePostprocessor"
			],
			[
				"Wikie",
				"WikipediaAttributeExtrapolator"
			],
			[
				"is",
				"is_file"
			]
		]
	},
	"buffers":
	[
		{
			"file": "eventdt/queues/consumers/algorithms/fuego_consumer.py",
			"settings":
			{
				"buffer_size": 46988,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					63,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAKVUAAAAAAAAplQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApVQAAAAAAAClVAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAHRWAAAAAAAAdFYAAAAAAAAsAAAAIGFuZCBzZWxmLmZpbHRlcmluZyA9PSBGaWx0ZXJpbmdMZXZlbC5TVFJJQ1Q",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHRWAAAAAAAAoFYAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACtUAAAAAAAALFQAAAAAAAAAAAAALFQAAAAAAAAsVAAAAAAAAAoAAAAgcmVwbGllcywg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADVUAAAAAAAAK1QAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " #"
					},
					"AgAAAFs8AAAAAAAAXDwAAAAAAAAAAAAAXDwAAAAAAABdPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWzwAAAAAAABbPAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " TODO:"
					},
					"BgAAAF08AAAAAAAAXjwAAAAAAAAAAAAAXjwAAAAAAABfPAAAAAAAAAAAAABfPAAAAAAAAGA8AAAAAAAAAAAAAGA8AAAAAAAAYTwAAAAAAAAAAAAAYTwAAAAAAABiPAAAAAAAAAAAAABiPAAAAAAAAGM8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTwAAAAAAABdPAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"cut",
					null,
					"AQAAAFw8AAAAAAAAXDwAAAAAAAAHAAAAIyBUT0RPOg",
					"AQAAAAAAAAABAAAAYzwAAAAAAABcPAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAFs8AAAAAAAAWzwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXDwAAAAAAABcPAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line Before.sublime-macro"
					},
					"AgAAAP87AAAAAAAAADwAAAAAAAAAAAAA/zsAAAAAAAAHPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWzwAAAAAAABbPAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"paste",
					null,
					"AQAAAAc8AAAAAAAADjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABzwAAAAAAAAHPAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " It"
					},
					"AwAAAA48AAAAAAAADzwAAAAAAAAAAAAADzwAAAAAAAAQPAAAAAAAAAAAAAAQPAAAAAAAABE8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADjwAAAAAAAAOPAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " would"
					},
					"BgAAABE8AAAAAAAAEjwAAAAAAAAAAAAAEjwAAAAAAAATPAAAAAAAAAAAAAATPAAAAAAAABQ8AAAAAAAAAAAAABQ8AAAAAAAAFTwAAAAAAAAAAAAAFTwAAAAAAAAWPAAAAAAAAAAAAAAWPAAAAAAAABc8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAETwAAAAAAAARPAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " make"
					},
					"BQAAABc8AAAAAAAAGDwAAAAAAAAAAAAAGDwAAAAAAAAZPAAAAAAAAAAAAAAZPAAAAAAAABo8AAAAAAAAAAAAABo8AAAAAAAAGzwAAAAAAAAAAAAAGzwAAAAAAAAcPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFzwAAAAAAAAXPAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " more"
					},
					"BQAAABw8AAAAAAAAHTwAAAAAAAAAAAAAHTwAAAAAAAAePAAAAAAAAAAAAAAePAAAAAAAAB88AAAAAAAAAAAAAB88AAAAAAAAIDwAAAAAAAAAAAAAIDwAAAAAAAAhPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHDwAAAAAAAAcPAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " sense"
					},
					"BgAAACE8AAAAAAAAIjwAAAAAAAAAAAAAIjwAAAAAAAAjPAAAAAAAAAAAAAAjPAAAAAAAACQ8AAAAAAAAAAAAACQ8AAAAAAAAJTwAAAAAAAAAAAAAJTwAAAAAAAAmPAAAAAAAAAAAAAAmPAAAAAAAACc8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAITwAAAAAAAAhPAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAACc8AAAAAAAAKDwAAAAAAAAAAAAAKDwAAAAAAAApPAAAAAAAAAAAAAApPAAAAAAAACo8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJzwAAAAAAAAnPAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAACk8AAAAAAAAKTwAAAAAAAABAAAAbyg8AAAAAAAAKDwAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAKjwAAAAAAAAqPAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAACg8AAAAAAAAKTwAAAAAAAAAAAAAKTwAAAAAAAAqPAAAAAAAAAAAAAAqPAAAAAAAACs8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKDwAAAAAAAAoPAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACs8AAAAAAAALDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKzwAAAAAAAArPAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAACw8AAAAAAAALTwAAAAAAAAAAAAALTwAAAAAAAAuPAAAAAAAAAAAAAAuPAAAAAAAAC88AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALDwAAAAAAAAsPAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " timeline's"
					},
					"CwAAAC88AAAAAAAAMDwAAAAAAAAAAAAAMDwAAAAAAAAxPAAAAAAAAAAAAAAxPAAAAAAAADI8AAAAAAAAAAAAADI8AAAAAAAAMzwAAAAAAAAAAAAAMzwAAAAAAAA0PAAAAAAAAAAAAAA0PAAAAAAAADU8AAAAAAAAAAAAADU8AAAAAAAANjwAAAAAAAAAAAAANjwAAAAAAAA3PAAAAAAAAAAAAAA3PAAAAAAAADg8AAAAAAAAAAAAADg8AAAAAAAAOTwAAAAAAAAAAAAAOTwAAAAAAAA6PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALzwAAAAAAAAvPAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " expiry"
					},
					"BwAAADo8AAAAAAAAOzwAAAAAAAAAAAAAOzwAAAAAAAA8PAAAAAAAAAAAAAA8PAAAAAAAAD08AAAAAAAAAAAAAD08AAAAAAAAPjwAAAAAAAAAAAAAPjwAAAAAAAA/PAAAAAAAAAAAAAA/PAAAAAAAAEA8AAAAAAAAAAAAAEA8AAAAAAAAQTwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOjwAAAAAAAA6PAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAEE8AAAAAAAAQjwAAAAAAAAAAAAAQjwAAAAAAABDPAAAAAAAAAAAAABDPAAAAAAAAEQ8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQTwAAAAAAABBPAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " resuse"
					},
					"BwAAAEQ8AAAAAAAARTwAAAAAAAAAAAAARTwAAAAAAABGPAAAAAAAAAAAAABGPAAAAAAAAEc8AAAAAAAAAAAAAEc8AAAAAAAASDwAAAAAAAAAAAAASDwAAAAAAABJPAAAAAAAAAAAAABJPAAAAAAAAEo8AAAAAAAAAAAAAEo8AAAAAAAASzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARDwAAAAAAABEPAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAEs8AAAAAAAATDwAAAAAAAAAAAAATDwAAAAAAABNPAAAAAAAAAAAAABNPAAAAAAAAE48AAAAAAAAAAAAAE48AAAAAAAATzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASzwAAAAAAABLPAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE88AAAAAAAAUDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATzwAAAAAAABPPAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAEw8AAAAAAAATDwAAAAAAAAEAAAAdGhlIEU8AAAAAAAARTwAAAAAAAAHAAAAcmVzdXNlIA",
					"AQAAAAAAAAABAAAAUDwAAAAAAABQPAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "reuse"
					},
					"BQAAAEU8AAAAAAAARjwAAAAAAAAAAAAARjwAAAAAAABHPAAAAAAAAAAAAABHPAAAAAAAAEg8AAAAAAAAAAAAAEg8AAAAAAAASTwAAAAAAAAAAAAASTwAAAAAAABKPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTwAAAAAAABFPAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAEo8AAAAAAAASzwAAAAAAAAAAAAASzwAAAAAAABMPAAAAAAAAAAAAABMPAAAAAAAAE08AAAAAAAAAAAAAE08AAAAAAAATjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjwAAAAAAABKPAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE48AAAAAAAATzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATjwAAAAAAABOPAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "Cha"
					},
					"BAAAAA88AAAAAAAAEDwAAAAAAAAAAAAAEDwAAAAAAAAQPAAAAAAAABwAAABJdCB3b3VsZCBtYWtlIG1vcmUgc2Vuc2UgZm9yEDwAAAAAAAARPAAAAAAAAAAAAAARPAAAAAAAABI8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADzwAAAAAAAArPAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAA88AAAAAAAADzwAAAAAAAADAAAAQ2hh",
					"AQAAAAAAAAABAAAAEjwAAAAAAAASPAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "Change"
					},
					"BgAAAA88AAAAAAAAEDwAAAAAAAAAAAAAEDwAAAAAAAARPAAAAAAAAAAAAAARPAAAAAAAABI8AAAAAAAAAAAAABI8AAAAAAAAEzwAAAAAAAAAAAAAEzwAAAAAAAAUPAAAAAAAAAAAAAAUPAAAAAAAABU8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADzwAAAAAAAAPPAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADk8AAAAAAAAOzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOTwAAAAAAAA5PAAAAAAAAP///////+9/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "both"
					},
					"BAAAADo8AAAAAAAAOzwAAAAAAAAAAAAAOzwAAAAAAAA8PAAAAAAAAAAAAAA8PAAAAAAAAD08AAAAAAAAAAAAAD08AAAAAAAAPjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOjwAAAAAAAA6PAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAD48AAAAAAAAPzwAAAAAAAAAAAAAPzwAAAAAAABAPAAAAAAAAAAAAABAPAAAAAAAAEE8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjwAAAAAAAA+PAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " SEER"
					},
					"BQAAAEE8AAAAAAAAQjwAAAAAAAAAAAAAQjwAAAAAAABDPAAAAAAAAAAAAABDPAAAAAAAAEQ8AAAAAAAAAAAAAEQ8AAAAAAAARTwAAAAAAAAAAAAARTwAAAAAAABGPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQTwAAAAAAABBPAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " And"
					},
					"BAAAAEY8AAAAAAAARzwAAAAAAAAAAAAARzwAAAAAAABIPAAAAAAAAAAAAABIPAAAAAAAAEk8AAAAAAAAAAAAAEk8AAAAAAAASjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARjwAAAAAAABGPAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAEc8AAAAAAAARzwAAAAAAAADAAAAQW5k",
					"AQAAAAAAAAABAAAASjwAAAAAAABKPAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "and"
					},
					"AwAAAEc8AAAAAAAASDwAAAAAAAAAAAAASDwAAAAAAABJPAAAAAAAAAAAAABJPAAAAAAAAEo8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARzwAAAAAAABHPAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAEo8AAAAAAAASzwAAAAAAAAAAAAASzwAAAAAAABMPAAAAAAAAAAAAABMPAAAAAAAAE08AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjwAAAAAAABKPAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " EL"
					},
					"AwAAAE08AAAAAAAATjwAAAAAAAAAAAAATjwAAAAAAABPPAAAAAAAAAAAAABPPAAAAAAAAFA8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATTwAAAAAAABNPAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAFA8AAAAAAAAUTwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUDwAAAAAAABQPAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " window"
					},
					"BwAAADg8AAAAAAAAOTwAAAAAAAAAAAAAOTwAAAAAAAA6PAAAAAAAAAAAAAA6PAAAAAAAADs8AAAAAAAAAAAAADs8AAAAAAAAPDwAAAAAAAAAAAAAPDwAAAAAAAA9PAAAAAAAAAAAAAA9PAAAAAAAAD48AAAAAAAAAAAAAD48AAAAAAAAPzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAODwAAAAAAAA4PAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " size"
					},
					"BQAAAD88AAAAAAAAQDwAAAAAAAAAAAAAQDwAAAAAAABBPAAAAAAAAAAAAABBPAAAAAAAAEI8AAAAAAAAAAAAAEI8AAAAAAAAQzwAAAAAAAAAAAAAQzwAAAAAAABEPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzwAAAAAAAA/PAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " cl"
					},
					"AwAAAEQ8AAAAAAAARTwAAAAAAAAAAAAARTwAAAAAAABGPAAAAAAAAAAAAABGPAAAAAAAAEc8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARDwAAAAAAABEPAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					2,
					"left_delete",
					null,
					"AgAAAEY8AAAAAAAARjwAAAAAAAABAAAAbEU8AAAAAAAARTwAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAARzwAAAAAAABHPAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "instance"
					},
					"CAAAAEU8AAAAAAAARjwAAAAAAAAAAAAARjwAAAAAAABHPAAAAAAAAAAAAABHPAAAAAAAAEg8AAAAAAAAAAAAAEg8AAAAAAAASTwAAAAAAAAAAAAASTwAAAAAAABKPAAAAAAAAAAAAABKPAAAAAAAAEs8AAAAAAAAAAAAAEs8AAAAAAAATDwAAAAAAAAAAAAATDwAAAAAAABNPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTwAAAAAAABFPAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " variable"
					},
					"CQAAAE08AAAAAAAATjwAAAAAAAAAAAAATjwAAAAAAABPPAAAAAAAAAAAAABPPAAAAAAAAFA8AAAAAAAAAAAAAFA8AAAAAAAAUTwAAAAAAAAAAAAAUTwAAAAAAABSPAAAAAAAAAAAAABSPAAAAAAAAFM8AAAAAAAAAAAAAFM8AAAAAAAAVDwAAAAAAAAAAAAAVDwAAAAAAABVPAAAAAAAAAAAAABVPAAAAAAAAFY8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATTwAAAAAAABNPAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "eventdt/queues/consumers/algorithms/tests/test_fuego_consumer.py",
			"settings":
			{
				"buffer_size": 192372,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAAC/JAAAAAAAAL8kAAAAAAAADAAAAbm90LskAAAAAAAAuyQAAAAAAAAEAAAAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC/JAAAAAAAAMskAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADzJAAAAAAAAPckAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADzJAAAAAAAAPMkAAAAAAAD////////vfw"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAADzJAAAAAAAAPMkAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD3JAAAAAAAAPckAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAADzJAAAAAAAAPckAAAAAAAAAAAAAPckAAAAAAAA+yQAAAAAAAAAAAAA+yQAAAAAAAD/JAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADzJAAAAAAAAPMkAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					3,
					"left_delete",
					null,
					"AwAAAD7JAAAAAAAAPskAAAAAAAABAAAAbj3JAAAAAAAAPckAAAAAAAABAAAAaTzJAAAAAAAAPMkAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD/JAAAAAAAAP8kAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAADvJAAAAAAAAPMkAAAAAAAAAAAAAPMkAAAAAAAA9yQAAAAAAAAAAAAA9yQAAAAAAAD7JAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADvJAAAAAAAAO8kAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " el"
					},
					"AwAAAD7JAAAAAAAAP8kAAAAAAAAAAAAAP8kAAAAAAABAyQAAAAAAAAAAAABAyQAAAAAAAEHJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD7JAAAAAAAAPskAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					2,
					"left_delete",
					null,
					"AgAAAEDJAAAAAAAAQMkAAAAAAAABAAAAbD/JAAAAAAAAP8kAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEHJAAAAAAAAQckAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "lenient"
					},
					"BwAAAD/JAAAAAAAAQMkAAAAAAAAAAAAAQMkAAAAAAABByQAAAAAAAAAAAABByQAAAAAAAELJAAAAAAAAAAAAAELJAAAAAAAAQ8kAAAAAAAAAAAAAQ8kAAAAAAABEyQAAAAAAAAAAAABEyQAAAAAAAEXJAAAAAAAAAAAAAEXJAAAAAAAARskAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD/JAAAAAAAAP8kAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " filtering"
					},
					"CgAAAEbJAAAAAAAAR8kAAAAAAAAAAAAAR8kAAAAAAABIyQAAAAAAAAAAAABIyQAAAAAAAEnJAAAAAAAAAAAAAEnJAAAAAAAASskAAAAAAAAAAAAASskAAAAAAABLyQAAAAAAAAAAAABLyQAAAAAAAEzJAAAAAAAAAAAAAEzJAAAAAAAATckAAAAAAAAAAAAATckAAAAAAABOyQAAAAAAAAAAAABOyQAAAAAAAE/JAAAAAAAAAAAAAE/JAAAAAAAAUMkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEbJAAAAAAAARskAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"paste",
					null,
					"AQAAAFPGAAAAAAAAaMYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFPGAAAAAAAAU8YAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"paste",
					null,
					"AQAAAMbLAAAAAAAA28sAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMbLAAAAAAAAxssAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"paste",
					null,
					"AQAAAMjOAAAAAAAA3c4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMjOAAAAAAAAyM4AAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAALjOAAAAAAAAuM4AAAAAAAAEAAAAbm90IA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALzOAAAAAAAAvM4AAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "not"
					},
					"AwAAABTLAAAAAAAAFcsAAAAAAAAAAAAAFcsAAAAAAAAWywAAAAAAAAAAAAAWywAAAAAAABfLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABTLAAAAAAAAFMsAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABfLAAAAAAAAGMsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABfLAAAAAAAAF8sAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "not"
					},
					"AwAAAIrQAAAAAAAAi9AAAAAAAAAAAAAAi9AAAAAAAACM0AAAAAAAAAAAAACM0AAAAAAAAI3QAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIrQAAAAAAAAitAAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI3QAAAAAAAAjtAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI3QAAAAAAAAjdAAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					2,
					"left_delete",
					null,
					"AgAAAJ7aAAAAAAAAntoAAAAAAAADAAAAbm90ndoAAAAAAACd2gAAAAAAAAEAAAAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ7aAAAAAAAAodoAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAKraAAAAAAAAq9oAAAAAAAAAAAAAq9oAAAAAAACs2gAAAAAAAAAAAACs2gAAAAAAAK3aAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKraAAAAAAAAqtoAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " lenient"
					},
					"CAAAAK3aAAAAAAAArtoAAAAAAAAAAAAArtoAAAAAAACv2gAAAAAAAAAAAACv2gAAAAAAALDaAAAAAAAAAAAAALDaAAAAAAAAsdoAAAAAAAAAAAAAsdoAAAAAAACy2gAAAAAAAAAAAACy2gAAAAAAALPaAAAAAAAAAAAAALPaAAAAAAAAtNoAAAAAAAAAAAAAtNoAAAAAAAC12gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK3aAAAAAAAArdoAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " filtering"
					},
					"CgAAALXaAAAAAAAAttoAAAAAAAAAAAAAttoAAAAAAAC32gAAAAAAAAAAAAC32gAAAAAAALjaAAAAAAAAAAAAALjaAAAAAAAAudoAAAAAAAAAAAAAudoAAAAAAAC62gAAAAAAAAAAAAC62gAAAAAAALvaAAAAAAAAAAAAALvaAAAAAAAAvNoAAAAAAAAAAAAAvNoAAAAAAAC92gAAAAAAAAAAAAC92gAAAAAAAL7aAAAAAAAAAAAAAL7aAAAAAAAAv9oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALXaAAAAAAAAtdoAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "not"
					},
					"AwAAAGzcAAAAAAAAbdwAAAAAAAAAAAAAbdwAAAAAAABu3AAAAAAAAAAAAABu3AAAAAAAAG/cAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGzcAAAAAAAAbNwAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG/cAAAAAAAAcNwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG/cAAAAAAAAb9wAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pretti",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"split",
				"File: Split View"
			],
			[
				"prett",
				"Pretty JSON: Format JSON"
			],
			[
				"package",
				"Package Control: Advanced Install Package"
			],
			[
				"prettif",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"pret",
				"Pretty JSON: Format JSON"
			],
			[
				"",
				"Bookmarks: Select All"
			],
			[
				"pretty",
				"Pretty JSON: Format JSON"
			],
			[
				"git:",
				"Git: Gui"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"1",
				"Go to 1self Dashboard"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"diff",
				"Git: Diff All Files (Ignore Whitespace)"
			],
			[
				"key ",
				"Preferences: Key Bindings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"scheme",
				"UI: Select Color Scheme"
			],
			[
				"select theme",
				"UI: Select Theme"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"view",
				"View: Toggle Minimap"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"add",
				"Git: Add All"
			],
			[
				"ackage",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"package con",
				"Install Package Control"
			],
			[
				"git",
				"Set Syntax: Git Config"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/nicholas/GitHub/EvenTDT",
		"/home/nicholas/GitHub/EvenTDT/eventdt",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers"
	],
	"file_history":
	[
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/eld_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/fuego_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/weighting/tfidf.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/weighting/global_schemes/idf.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/twitter/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/tools/consume.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tokenizer.py",
		"/home/nicholas/GitHub/EvenTDT/tools/summarize.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_summarize.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py",
		"/home/nicholas/DATA/c6-tdt/analyses/Southampton - Arsenal (ELD).json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/algorithms/dgs.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/document.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tests/test_document.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/tests/test_document_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/vector_math.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/cluster.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/objects/exportable.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/objects/attributable.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/algorithms/temporal_no_k_means.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/tests/test_fuego_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_participants.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_shareable.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_consume.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_model.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/algorithms/mmr.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/tools/model.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/tests/test_vector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/vector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/tests/test_cluster.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/tests/test_cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/tests/test_topical_cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/document_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/nodes/topical_cluster_node.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/summarization/timeline/tests/test_timeline.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/split_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/token_split_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/zhao_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tdt/algorithms/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/algorithms/fire_consumer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tdt/algorithms/zhao.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/algorithms/tests/test_no_k_means.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/vsm/clustering/algorithms/no_k_means.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/queues/consumers/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/understanding_modeler.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/modeling/modelers/tests/test_understanding_modeler.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/attributes/profile.py",
		"/home/nicholas/GitHub/EvenTDT/tools/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/nlp/tests/test_tokenizer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/concepts.json",
		"/home/nicholas/GitHub/EvenTDT/tools/filter_retweets.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/#ParmaMilan-simplified.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/#ParmaMilan-streams.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/LIVNAP.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/timelines/LIVMUN.json",
		"/home/nicholas/GitHub/EvenTDT/tools/participants.py",
		"/home/nicholas/GitHub/EvenTDT/tools/concepts.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/eld_participant_detector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/participants.json",
		"/home/nicholas/GitHub/EvenTDT/tools/bootstrap.py",
		"/home/nicholas/GitHub/EvenTDT/tools/terms.py",
		"/home/nicholas/GitHub/EvenTDT/tools/evaluation/terms.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/stat/corpus/tests/test_rank.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/stat/corpus/rank.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/attributes/extractors/linguistic.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/tokenized/sample-2.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/tokenized/sample-1.json",
		"/home/nicholas/GitHub/EvenTDT/README.md",
		"/home/nicholas/GitHub/EvenTDT/tools/collect.py",
		"/home/nicholas/GitHub/EvenTDT/tools/shareable.py",
		"/home/nicholas/GitHub/EvenTDT/temp/meta.json",
		"/home/nicholas/GitHub/EvenTDT/tests.sh",
		"/home/nicholas/GitHub/EvenTDT/docsource/tools.rst",
		"/home/nicholas/GitHub/EvenTDT/tools/evaluation/tests/test_terms.py",
		"/home/nicholas/GitHub/EvenTDT/tools/correlation.py",
		"/home/nicholas/GitHub/EvenTDT/tools/evaluation/ate.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/correlations.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/application/tests/test_event.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/application/event.py",
		"/home/nicholas/GitHub/EvenTDT/tools/idf.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_idf.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/idf.json",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_concepts.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_bootstrap.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_correlation.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_terms.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/gold.txt",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/empty.txt",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/bootstrapping/bootstrapped.json",
		"/home/nicholas/GitHub/EvenTDT/tools/tests/test_package.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/tests/corpora/ate/sample.json",
		"/home/nicholas/GitHub/EvenTDT/temp/sample.json",
		"/home/nicholas/GitHub/EvenTDT/tools/to_tsv.py",
		"/home/nicholas/GitHub/Embed2Detect/embed2detect/main.py",
		"/home/nicholas/GitHub/Embed2Detect/embed2detect/event_word_extractor.py",
		"/home/nicholas/GitHub/Embed2Detect/project_config.py",
		"/home/nicholas/GitHub/EvenTDT/docsource/ate.rst",
		"/home/nicholas/GitHub/EvenTDT/docsource/apd.rst",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/application/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/temp/event.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/tests/test_eld_participant_detector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/depict_participant_detector.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/tests/test_depict_participant_detector.py",
		"/home/nicholas/DATA/c3-apd/#CanadianGP-2022/temp.json",
		"/home/nicholas/DATA/c3-apd/#CanadianGP-2022/participants-annotations-extrapolated.json",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extrapolators/external/wikipedia_attribute_extrapolator.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/resolvers/external/wikipedia_search_resolver.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/filters/local/rank_filter.py",
		"/home/nicholas/GitHub/EvenTDT/tools/tokenizer.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/entity_extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/annotation_extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/twitterner_entity_extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/ate/extractor.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extractors/local/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extrapolators/external/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/extrapolators/__init__.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/resolvers/resolver.py",
		"/home/nicholas/GitHub/EvenTDT/eventdt/apd/postprocessors/postprocessor.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 122.0,
		"where_history":
		[
			"",
			"tools/*.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"EL",
			"reply",
			"idf",
			"global_schemes",
			"scheme",
			"storage",
			"Storage",
			"TF-",
			"`.",
			"remove_unicode_entities",
			"emoji",
			"eventdt",
			"from ",
			"reporting",
			"time.time()",
			"str",
			"brevity_scores",
			"_largest_communities",
			"_extract_communities",
			"_score_documents",
			"math",
			"json",
			"[document]",
			"_score_documents",
			"upper",
			"capital",
			"upper_pattern",
			"document.",
			"document.attributes['timestamp']",
			"hash",
			".get('id')",
			"summaries",
			"filter_documents",
			"reporting",
			"group",
			"reporting",
			"ORIGINAL",
			"documents",
			" ))",
			"any",
			"is_retweet",
			"retweets",
			"original",
			"ORIGINAL",
			"is_retwee",
			"all",
			"any",
			"not",
			"'..'",
			"-500",
			"max_intra",
			"neither",
			"assertFalse",
			"assertTrue",
			"'ORIGINAL'",
			"ORIGINAL",
			"test_filter_documents_reporting_original",
			"is_retweet",
			"ReportingLevel",
			"ALL",
			"ORIGINAL",
			"ALL",
			"ORIGINAL",
			"original",
			"ORIGINAL",
			"original",
			"ORIGINAL",
			"original",
			"ORIGINAL",
			"original",
			"False",
			"True",
			"filtered",
			"True",
			"ALL",
			"Document",
			"ALL",
			"is_retweet",
			"ORIGINAL",
			"retweets",
			"verified",
			"is_verified",
			"ReportingLevel",
			"all",
			"is_retweet",
			"ORIGINAL",
			" =",
			"ReportingLevel",
			"import",
			"all",
			"Exportable",
			"exportable",
			"objects",
			"filter_documents",
			"query = None\n            if with_query and all( type(node) is TopicalClusterNode for node in nodes ):",
			"query",
			"for document in documents:\n                    document.text = cleaner.clean(document.text) if clean else document.text",
			"for document in documents:\n                    document.text = cleaner.clean(document.text) if clean else document.text\n                documents = filter_documents(documents, max_documents, terms=terms)",
			"for document in documents:\n                    document.text = cleaner.clean(document.text) if clean else document.text",
			"for document in documents:\n                document.text = cleaner.clean(document.text) if clean else document.text",
			"for document in documents:",
			"for document in documents:\n                    document.text = cleaner.clean(document.text) if clean else document.text\n                documents = filter_documents(documents, max_documents, terms=terms)",
			"merge=",
			"node_d",
			"nodes",
			"dimensions",
			"hash",
			"vector.hash()",
			"print(len(documents), e1, e2)",
			"1000",
			"window_size",
			"window",
			"100",
			"1000",
			"10",
			"100",
			"cluster._last",
			"c",
			"e",
			"ujson",
			"FUEGOConsumer",
			")\n",
			"time",
			"created_at",
			"documents",
			"created_at",
			"attributes",
			"4"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\t&\\t",
			" \\\\\\\\\\n",
			"\\\\\\\\\\n",
			"\\t&\\t",
			"is_own",
			"\\t&\\t",
			" \\\\\\\\ \\n",
			"\\\\ \\n",
			" & ",
			"SEER",
			"EVATE",
			"    ",
			"\\t&\\t",
			"\\t\\\\\\\\\\n",
			"\\\\\\n",
			"\\t&\\t",
			"\\t",
			"\\\\t",
			"\\\\%",
			"\\%",
			"\\n",
			"\\%"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "eventdt/queues/consumers/algorithms/fuego_consumer.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46988,
						"regions":
						{
						},
						"selection":
						[
							[
								15446,
								15446
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3671.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "eventdt/queues/consumers/algorithms/tests/test_fuego_consumer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 192372,
						"regions":
						{
						},
						"selection":
						[
							[
								56432,
								56432
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16952.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 275.0
	},
	"pinned_build_system": "",
	"project": "eventdt.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"eldconsu",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"testfuego",
				"eventdt/queues/consumers/algorithms/tests/test_fuego_consumer.py"
			],
			[
				"fegoc",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"fuegoco",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"idf.py",
				"eventdt/nlp/weighting/global_schemes/idf.py"
			],
			[
				"tfidf",
				"eventdt/nlp/weighting/tfidf.py"
			],
			[
				"consume",
				"tools/consume.py"
			],
			[
				"tokeni",
				"eventdt/nlp/tokenizer.py"
			],
			[
				"twitterinit",
				"eventdt/twitter/__init__.py"
			],
			[
				"testsumm",
				"tools/tests/test_summarize.py"
			],
			[
				"summari",
				"tools/summarize.py"
			],
			[
				"summarize",
				"tools/summarize.py"
			],
			[
				"testdoc",
				"eventdt/nlp/tests/test_document.py"
			],
			[
				"testdocu",
				"eventdt/summarization/timeline/nodes/tests/test_document_node.py"
			],
			[
				"document",
				"eventdt/nlp/document.py"
			],
			[
				"vectorma",
				"eventdt/vsm/vector_math.py"
			],
			[
				"dgs",
				"eventdt/summarization/algorithms/dgs.py"
			],
			[
				"cluster",
				"eventdt/vsm/clustering/cluster.py"
			],
			[
				"testdocument",
				"eventdt/nlp/tests/test_document.py"
			],
			[
				"export",
				"eventdt/objects/exportable.py"
			],
			[
				"fuegoc",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"exportab",
				"eventdt/objects/exportable.py"
			],
			[
				"fuego",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"attrib",
				"eventdt/objects/attributable.py"
			],
			[
				"testeld",
				"eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py"
			],
			[
				"tempora",
				"eventdt/vsm/clustering/algorithms/temporal_no_k_means.py"
			],
			[
				"consu",
				"tools/consume.py"
			],
			[
				"eldcons",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"testeldcon",
				"eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py"
			],
			[
				"eldcon",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"cosnume",
				"tools/consume.py"
			],
			[
				"test",
				"tools/tests/test_participants.py"
			],
			[
				"testsha",
				"tools/tests/test_shareable.py"
			],
			[
				"testconsume",
				"tools/tests/test_consume.py"
			],
			[
				"modelersini",
				"eventdt/modeling/modelers/__init__.py"
			],
			[
				"modeltestpackage",
				"eventdt/modeling/modelers/tests/test_package.py"
			],
			[
				"testmodel",
				"tools/tests/test_model.py"
			],
			[
				"fuegocon",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"queualgo",
				"eventdt/queues/consumers/algorithms/__init__.py"
			],
			[
				"mmr",
				"eventdt/summarization/algorithms/mmr.py"
			],
			[
				"testsummari",
				"tools/tests/test_summarize.py"
			],
			[
				"testsummar",
				"tools/tests/test_summarize.py"
			],
			[
				"timelineinit",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"timelineini",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"modelertestp",
				"eventdt/modeling/modelers/tests/test_package.py"
			],
			[
				"testpackage",
				"eventdt/modeling/tests/test_package.py"
			],
			[
				"nodesini",
				"eventdt/summarization/timeline/nodes/__init__.py"
			],
			[
				"modelers/tes",
				"eventdt/modeling/modelers/tests/test_package.py"
			],
			[
				"modelingini",
				"eventdt/modeling/__init__.py"
			],
			[
				"modeling/",
				"eventdt/modeling/modelers/__init__.py"
			],
			[
				"model",
				"tools/model.py"
			],
			[
				"testvec",
				"eventdt/vsm/tests/test_vector.py"
			],
			[
				"vector",
				"eventdt/vsm/vector.py"
			],
			[
				"exportable",
				"eventdt/objects/exportable.py"
			],
			[
				"testclust",
				"eventdt/vsm/clustering/tests/test_cluster.py"
			],
			[
				"testcluster",
				"eventdt/vsm/clustering/tests/test_cluster.py"
			],
			[
				"testdocume",
				"eventdt/summarization/timeline/nodes/tests/test_document_node.py"
			],
			[
				"testtopical",
				"eventdt/summarization/timeline/nodes/tests/test_topical_cluster_node.py"
			],
			[
				"documentno",
				"eventdt/summarization/timeline/nodes/document_node.py"
			],
			[
				"topicalcl",
				"eventdt/summarization/timeline/nodes/topical_cluster_node.py"
			],
			[
				"vecto",
				"eventdt/vsm/vector.py"
			],
			[
				"attribu",
				"eventdt/objects/attributable.py"
			],
			[
				"vec",
				"eventdt/vsm/vector.py"
			],
			[
				"attributable",
				"eventdt/objects/attributable.py"
			],
			[
				"documentnode",
				"eventdt/summarization/timeline/nodes/document_node.py"
			],
			[
				"timelini",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"testtimeline",
				"eventdt/summarization/timeline/tests/test_timeline.py"
			],
			[
				"docume",
				"eventdt/nlp/document.py"
			],
			[
				"testtopica",
				"eventdt/summarization/timeline/nodes/tests/test_topical_cluster_node.py"
			],
			[
				"dcu",
				"eventdt/nlp/document.py"
			],
			[
				"clusterno",
				"eventdt/summarization/timeline/nodes/cluster_node.py"
			],
			[
				"testnode",
				"eventdt/summarization/timeline/nodes/tests/test_cluster_node.py"
			],
			[
				"nodesinit",
				"eventdt/summarization/timeline/nodes/__init__.py"
			],
			[
				"node",
				"eventdt/summarization/timeline/nodes/topical_cluster_node.py"
			],
			[
				"split",
				"eventdt/queues/consumers/split_consumer.py"
			],
			[
				"tokensplit",
				"eventdt/queues/consumers/token_split_consumer.py"
			],
			[
				"fuegocons",
				"eventdt/queues/consumers/algorithms/fuego_consumer.py"
			],
			[
				"zhacons",
				"eventdt/queues/consumers/algorithms/zhao_consumer.py"
			],
			[
				"eldconsumer",
				"eventdt/queues/consumers/algorithms/eld_consumer.py"
			],
			[
				"algorinit",
				"eventdt/queues/consumers/algorithms/__init__.py"
			],
			[
				"algorithmsini",
				"eventdt/queues/consumers/algorithms/__init__.py"
			],
			[
				"algorithmsi",
				"eventdt/tdt/algorithms/__init__.py"
			],
			[
				"testeldcons",
				"eventdt/queues/consumers/algorithms/tests/test_eld_consumer.py"
			],
			[
				"model.",
				"tools/model.py"
			],
			[
				"summar",
				"tools/summarize.py"
			],
			[
				"firecon",
				"eventdt/queues/consumers/algorithms/fire_consumer.py"
			],
			[
				"zhao",
				"eventdt/tdt/algorithms/zhao.py"
			],
			[
				"clusternode",
				"eventdt/summarization/timeline/nodes/topical_cluster_node.py"
			],
			[
				"testnok",
				"eventdt/vsm/clustering/algorithms/tests/test_no_k_means.py"
			],
			[
				"tempor",
				"eventdt/vsm/clustering/algorithms/temporal_no_k_means.py"
			],
			[
				"nok",
				"eventdt/vsm/clustering/algorithms/no_k_means.py"
			],
			[
				"nokme",
				"eventdt/vsm/clustering/algorithms/no_k_means.py"
			],
			[
				"testund",
				"eventdt/modeling/modelers/tests/test_understanding_modeler.py"
			],
			[
				"under",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"consume.",
				"tools/consume.py"
			],
			[
				"profile",
				"eventdt/attributes/profile.py"
			],
			[
				"toolsinit",
				"tools/__init__.py"
			],
			[
				"model.p",
				"tools/model.py"
			],
			[
				"testunde",
				"eventdt/modeling/modelers/tests/test_understanding_modeler.py"
			],
			[
				"underst",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"testpackage nlp",
				"eventdt/nlp/tests/test_package.py"
			],
			[
				"testokn",
				"eventdt/nlp/tests/test_tokenizer.py"
			],
			[
				"nlpini",
				"eventdt/nlp/__init__.py"
			],
			[
				"tokeniz",
				"eventdt/nlp/tokenizer.py"
			],
			[
				"concepts",
				"eventdt/tests/corpora/ate/concepts.json"
			],
			[
				"filter",
				"tools/filter_retweets.py"
			],
			[
				"simplif",
				"eventdt/tests/corpora/timelines/#ParmaMilan-simplified.json"
			],
			[
				"timeline",
				"eventdt/summarization/timeline/__init__.py"
			],
			[
				"summariz",
				"tools/summarize.py"
			],
			[
				"parmami",
				"eventdt/tests/corpora/timelines/#ParmaMilan-streams.json"
			],
			[
				"parmamilan",
				"eventdt/tests/corpora/timelines/#ParmaMilan-streams.json"
			],
			[
				"modelini",
				"eventdt/modeling/modelers/__init__.py"
			],
			[
				"und",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"timelines/",
				"eventdt/tests/corpora/timelines/LIVNAP.json"
			],
			[
				"timeln.json",
				"eventdt/tests/corpora/timelines/LIVMUN.json"
			],
			[
				"mod",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"partic",
				"tools/participants.py"
			],
			[
				"unde",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"testpa",
				"tools/tests/test_participants.py"
			],
			[
				"particip",
				"eventdt/apd/eld_participant_detector.py"
			],
			[
				"nlp/",
				"eventdt/nlp/tokenizer.py"
			],
			[
				"unders",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"understand",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"participants.js",
				"eventdt/tests/corpora/participants.json"
			],
			[
				"testparti",
				"tools/tests/test_participants.py"
			],
			[
				"partici",
				"tools/participants.py"
			],
			[
				"understa",
				"eventdt/modeling/modelers/understanding_modeler.py"
			],
			[
				"modelersinit",
				"eventdt/modeling/modelers/__init__.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/GitHub/EvenTDT/eventdt.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 263.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
