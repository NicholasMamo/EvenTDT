"""
The :class:`~Compound` class is an extension of the :class:`~vsm.vector.Vector`.
The class represents a group of vectors, not unlike a :class:`~vsm.clustering.cluster.Cluster`.
Differently from a :class:`~vsm.clustering.cluster.Cluster`, however, the :class:`~vsm.compound.Compound` class does not store all the documents.
Instead, it only stores the accumulation of the documents and the number of documents inside of it.

The class is used by applications that do not need a comprehensive list of vectors.
If a single
"""

from .vector import Vector

class Compound(Vector):
    """
    The :class:`~Compound` class is a special type of :class:`~vsm.vector.Vector` that represents several vectors.
    The class only stores a representation of the vectors, adding each vector's dimensions to form one single vector.
    """

    def __init__(self, vectors, *args, **kwargs):
        """
        Initialize the :class:`~Compound`.
        """

        pass

    def add(self, *args):
        """
        Add the given :class:`~vsm.vector.Vector` arguments to the :class:`~Compound`.
        """

        pass

    def remove(self, *args):
        """
        Remove the given :class:`~vsm.vector.Vector` arguments from the :class:`~Compound`.
        """

        pass

    def centroid(self):
        """
        Calculate the centroid of the :class:`~Compound`.

        :return: A new, normalized :class:`~vsm.vector.Vector` representing the centroid of all vectors in the :class:`~Compound`.
        :rtype: :class:`~vsm.vector.Vector`
        """

        pass

    def to_array(self):
        """
        Export the :class:`~Compound` as ``dict``.
        This ``dict`` has three keys:

            1. The class name, used when re-creating the :class:`~Compound`,
            2. The :class:`~Compound`'s attributes as a ``dict``,
            3. The :class:`~Compound`'s dimensions as a ``dict``, and
            4. The number of :class:`~vsm.vector.Vector` instances in the class.

        :return: The :class:`~Compound` as a ``dict``.
        :rtype: dict
        """

        pass

    @staticmethod
    def from_array(array):
        """
        Create an instance of the :class:`~Compound` from the given ``dict``.
        This function expects the array to have been generated by the :func:`~Compound.to_array`, and must have these keys:

            1. The class name,
            2. The :class:`~Compound`'s attributes as a ``dict``,
            3. The :class:`~Compound`'s dimensions as a ``dict``, and
            4. The number of :class:`~vsm.vector.Vector` instances in the class.

        :param array: The ``dict`` with the attributes to create the :class:`~Compound`.
        :type array: dict

        :return: A new instance of the :class:`~Compound` with the same attributes stored in the object.
        :rtype: :class:`~Compound`
        """

        pass
